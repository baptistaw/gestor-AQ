// ======================================================================
//  Prisma schema — Gestor de Consentimientos
// ======================================================================

// ---------- Generador del cliente ----------
generator client {
  provider = "prisma-client-js"
}

// ---------- Fuente de datos ----------
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ======================================================================
//  ENUMS
// ======================================================================

enum ConsentType {
  SURGICAL
  ANESTHESIA
}

// ======================================================================
//  MODELOS
// ======================================================================

// ----------------------------------------------------------------------
//  ConsentForm – almacena los PDFs de consentimientos
// ----------------------------------------------------------------------
model ConsentForm {
  id          String      @id @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  fileName    String
  fileContent Bytes
  type        ConsentType

  // Relaciones inversas (no obligatorias en Patient)
  surgicalPatients   Patient[] @relation("SurgicalConsent")
  anesthesiaPatients Patient[] @relation("AnesthesiaConsent")
}

// ----------------------------------------------------------------------
//  Surgeon – cirujano
// ----------------------------------------------------------------------
model Surgeon {
  id                        String @id @default(cuid())
  firstName                 String
  lastName                  String
  professionalLicenseNumber String @unique
  password                  String // (hash en prod)
  specialty                 String

  patients Patient[]
}

// ----------------------------------------------------------------------
//  Anesthesiologist – anestesiólogo
// ----------------------------------------------------------------------
model Anesthesiologist {
  id                        String @id @default(cuid())
  firstName                 String
  lastName                  String
  professionalLicenseNumber String @unique
  password                  String

  patients Patient[]
}

// ----------------------------------------------------------------------
//  Patient – paciente
// ----------------------------------------------------------------------
model Patient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fastingPlan   FastingPlan? 
  fastingPlanId String? 
  suspensions   Suspension[]


  // --- Datos personales ---
  firstName   String
  lastName    String
  email       String
  cedula      String
  dateOfBirth DateTime
  sex         String

  // --- Consentimiento quirúrgico ---
  surgicalProcedure      String?
  surgeryDateTime        DateTime?
  surgicalSignatureImage String?
  surgicalSignedDate     DateTime?

  // --- Consentimiento de anestesia ---
  anesthesiaInstructions   String?
  medicationToSuspend      String[]  @default([]) // array de textos
  anesthesiaSignatureImage String?
  anesthesiaSignedDate     DateTime?

  // --- Ayuno ---
  isInfant            Boolean @default(false)
  fastingSolids       String?
  fastingClearLiquids String?
  fastingCowMilk      String?
  fastingBreastMilk   String?

  // --- Relaciones 1‑N con profesionales ---
  surgeonId String?
  surgeon   Surgeon? @relation(fields: [surgeonId], references: [id])

  anesthesiologistId String?
  anesthesiologist   Anesthesiologist? @relation(fields: [anesthesiologistId], references: [id])

  // --- Relaciones 1‑1 con formularios PDF ---
  surgicalConsentId String?      @unique
  surgicalConsent   ConsentForm? @relation("SurgicalConsent", fields: [surgicalConsentId], references: [id])

  anesthesiaConsentId String?      @unique
  anesthesiaConsent   ConsentForm? @relation("AnesthesiaConsent", fields: [anesthesiaConsentId], references: [id])

  // --- Índices ---
  @@unique([email, cedula])
}

// 👇 AÑADE o reemplaza lo que sigue —el resto de tu schema permanece igual.

//──────────────────────────────────────────────────────────────
//  NUEVOS MODELOS
//──────────────────────────────────────────────────────────────
model FastingPlan {
  id              String   @id @default(cuid())
  isInfant        Boolean  @default(false)
  solidsHrs       Int
  clearLiquidsHrs Int
  cowMilkHrs      Int?
  breastMilkHrs   Int?
  // 1‑a‑1 con Patient
  patient   Patient? @relation(fields:[patientId], references:[id])
  patientId String?  @unique
}

model DrugCatalog {
  id            Int      @id @default(autoincrement())
  genericName   String
  groupName     String
  maxSuspendHrs Int
  clinicalNotes String?
  brands        Brand[]
  suspensions   Suspension[]
}

model Brand {
  id       Int         @id @default(autoincrement())
  name     String
  countryIso String    @db.VarChar(2)
  drug     DrugCatalog @relation(fields:[drugId], references:[id])
  drugId   Int
}

model Suspension {
  id        String      @id @default(cuid())
  patient   Patient     @relation(fields:[patientId], references:[id])
  patientId String
  drug      DrugCatalog @relation(fields:[drugId], references:[id])
  drugId    Int
  extraNotes String?
  createdAt DateTime    @default(now())
}

